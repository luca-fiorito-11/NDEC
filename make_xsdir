#!/bin/bash

# TO DEFINE
while [[ $# -gt 0 ]]
do
key="$1"
case $key in
    --xsdir)
    XSDIR=$(realpath "$2")
    shift # past argument
    shift # past value
    ;;
    --relative-route)
    export RROUTE="$2/"
    shift # past argument
    shift # past value
    ;;
    --suffix)
    export SUFFIX="$2"
    shift # past argument
    shift # past value
    ;;
    *)    # unknown option
    POSITIONAL+=("$1") # save it in an array for later
    shift # past argument
    ;;
esac
done
export AROUTE="0" #MANDATORY ?
export MOVE=1
INPUT_LIST="input.list"

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Terminate if xsdir is not given.
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[[ -z $XSDIR ]] && exit 0



#######################################################################
#
# Run this part only if XSDIR is given.
#
#######################################################################

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Check if XSDIR exist
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[[ -f "$XSDIR" ]] || { >&2 echo -e "ERROR: wrong XSDIR file '$XSDIR'."; exit 1; }
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Extract the datapath from the xsdir file.
# It is assumed that the word datapath is present only in 
# the first line of the xsdir and that it is followed by a 
# "=" symbol.
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
export DATAPATH=$( grep -i datapath "$XSDIR" | cut -d= -f2)
[[ -d "${DATAPATH}" ]] || {>&2 echo -e "ERROR: DATAPATH in xsdir file "$XSDIR" does not exist."; exit 1;}


run_xsdir () {
#=== FUNCTION =========================================================
# NAME: run_xsdir
# DESCRIPTION:
# PARAMETER 1: ENDF/6 file (absolute path)
#======================================================================
WDIR=$(realpath $(basename "$1"))
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Count the number of xsdir files in the given directory.
# Filter the files by name  using a pattern "*XSDIR".
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
COUNT=$(find "$WDIR" -name "*.XSDIR" | wc -l)
[[ $COUNT -gt 1 ]] && { >&2 echo -e "ERROR: Found more than one '*.XSDIR' file in directory '$WDIR'."; exit 1; }
[[ $COUNT == 0 ]]  && { >&2 echo -e "ERROR: No \"*.XSDIR\" file in directory '$WDIR'."; exit 1; }
XSDIR=$(find "$(realpath $WDIR )" -name "*XSDIR")                              # xsdir file
PREFIX=$(basename "${XSDIR}" .XSDIR)                                           # prefix 
FNAME="${PREFIX}${SUFFIX}.ace"                                                 # ACE filename
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Use sed to replace the filename and route placeholders 
# from the xsdir line.
# 'tr -s " "' squeezes consecutive whitespaces into one.
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
line=$( sed -e "s|filename|${RROUTE-""}$FNAME|" -e "s|route|0|" $XSDIR | tr -s " ")
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# If a xsdir line is longer than 80 characters, split it into 3 parts with "+\n".
# Use the whitespaces to define the delimiters for each part.
# It is assumed that each xsdir line is of the type generated by the ACER 
# module of NJOY, that is 
# "  1001.00c    0.999167 filename route 1   1     8687     0     0 2.530E-08 "
# Hence, each line starts with a whitespace.
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
if [[ ${#line} -gt 80 ]]
then
   part1=$(echo "$line" | cut -d" " -f -6)
   part2=$(echo "$line" | cut -d" "  -f 6-)
   line="$part1 +\n$part2"
fi
ACE="${WDIR}/${PREFIX}.ACE"
echo $ACE
[[ -f "$ACE" ]] || { >&2 echo -e "ERROR: ACE file for '${PREFIX}' not found."; exit 1; }
mkdir -p "$DATAPATH/${RROUTE-""}"
cp "$ACE" "$DATAPATH/${RROUTE-""}$FNAME"
}

export -f run_xsdir
#PARALLEL="parallel --no-run-if-empty -j $NJOBS --joblog $JOBLOG --linebuffer $DRYRUN"
echo $INPUT_LIST
parallel run_xsdir {} :::: "$INPUT_LIST" >> "$XSDIR"
