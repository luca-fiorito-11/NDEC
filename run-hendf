#!/bin/bash
#===============================================================================
#
# FILE: run-njoy
#
# USAGE: run-njoy FILE [options]
#
# DESCRIPTION: Run NJOY for a given input file.
#              Below are reported the steps carried out by this script.
#
#              *) Parse the command line arguments
#              moder - reconr - broadr - unresr - groupr -
#                                      heatr - viewr - heatr - gapsr - thermr -
#                                      purr - moder - acer - acer - viewr
#
# OPTIONS: see function 'usage' below
# REQUIREMENTS: ---
# BUGS: ---
# NOTES: ---
# AUTHOR: Luca Fiorito, luca.fiorito@oecd.org
# COMPANY: OECD/NEA
# VERSION: ---
# CREATED: 17.10.2017
# REVISION: ---
#===============================================================================

#################
# Default options
#################
CODE=$(basename "$0")                                           # Executable name
SCRIPTDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"   # Directory of this script
WDIR="$(pwd)"                                                   # Working directory
TIMEOUT='10h'							# Default timeout 4h for stopping codes
NSIG=6 								# Number of sigma_0 values
SIGS='1.E10 1.E+4 1.E+3 1.E+2 1.E+1 1.E+0'			# String with sigma_0 values
NGROUP=238
GROUPAS="    1.000E-05, 1.000E-04, 5.000E-04, 7.500E-04, 1.000E-03,
    1.200E-03, 1.500E-03, 2.000E-03, 2.500E-03, 3.000E-03,
    4.000E-03, 5.000E-03, 7.500E-03, 1.000E-02, 2.530E-02,
    3.000E-02, 4.000E-02, 5.000E-02, 6.000E-02, 7.000E-02,
    8.000E-02, 9.000E-02, 1.000E-01, 1.250E-01, 1.500E-01,
    1.750E-01, 2.000E-01, 2.250E-01, 2.500E-01, 2.750E-01,
    3.000E-01, 3.250E-01, 3.500E-01, 3.750E-01, 4.000E-01,
    4.500E-01, 5.000E-01, 5.500E-01, 6.000E-01, 6.250E-01,
    6.500E-01, 7.000E-01, 7.500E-01, 8.000E-01, 8.500E-01,
    9.000E-01, 9.250E-01, 9.500E-01, 9.750E-01, 1.000E+00,
    1.010E+00, 1.020E+00, 1.030E+00, 1.040E+00, 1.050E+00,
    1.060E+00, 1.070E+00, 1.080E+00, 1.090E+00, 1.100E+00,
    1.110E+00, 1.120E+00, 1.130E+00, 1.140E+00, 1.150E+00,
    1.175E+00, 1.200E+00, 1.225E+00, 1.250E+00, 1.300E+00,
    1.350E+00, 1.400E+00, 1.450E+00, 1.500E+00, 1.590E+00,
    1.680E+00, 1.770E+00, 1.860E+00, 1.940E+00, 2.000E+00,
    2.120E+00, 2.210E+00, 2.300E+00, 2.380E+00, 2.470E+00,
    2.570E+00, 2.670E+00, 2.770E+00, 2.870E+00, 2.970E+00,
    3.000E+00, 3.050E+00, 3.150E+00, 3.500E+00, 3.730E+00,
    4.000E+00, 4.750E+00, 5.000E+00, 5.400E+00, 6.000E+00,
    6.250E+00, 6.500E+00, 6.750E+00, 7.000E+00, 7.150E+00,
    8.100E+00, 9.100E+00, 1.000E+01, 1.150E+01, 1.190E+01,
    1.290E+01, 1.375E+01, 1.440E+01, 1.510E+01, 1.600E+01,
    1.700E+01, 1.850E+01, 1.900E+01, 2.000E+01, 2.100E+01,
    2.250E+01, 2.500E+01, 2.750E+01, 3.000E+01, 3.125E+01,
    3.175E+01, 3.325E+01, 3.375E+01, 3.460E+01, 3.550E+01,
    3.700E+01, 3.800E+01, 3.910E+01, 3.960E+01, 4.100E+01,
    4.240E+01, 4.400E+01, 4.520E+01, 4.700E+01, 4.830E+01,
    4.920E+01, 5.060E+01, 5.200E+01, 5.340E+01, 5.900E+01,
    6.100E+01, 6.500E+01, 6.750E+01, 7.200E+01, 7.600E+01,
    8.000E+01, 8.200E+01, 9.000E+01, 1.000E+02, 1.080E+02,
    1.150E+02, 1.190E+02, 1.220E+02, 1.860E+02, 1.925E+02,
    2.075E+02, 2.100E+02, 2.400E+02, 2.850E+02, 3.050E+02,
    5.500E+02, 6.700E+02, 6.830E+02, 9.500E+02, 1.150E+03,
    1.500E+03, 1.550E+03, 1.800E+03, 2.200E+03, 2.290E+03,
    2.580E+03, 3.000E+03, 3.740E+03, 3.900E+03, 6.000E+03,
    8.030E+03, 9.500E+03, 1.300E+04, 1.700E+04, 2.500E+04,
    3.000E+04, 4.500E+04, 5.000E+04, 5.200E+04, 6.000E+04,
    7.300E+04, 7.500E+04, 8.200E+04, 8.500E+04, 1.000E+05,
    1.283E+05, 1.500E+05, 2.000E+05, 2.700E+05, 3.300E+05,
    4.000E+05, 4.200E+05, 4.400E+05, 4.700E+05, 4.995E+05,
    5.500E+05, 5.730E+05, 6.000E+05, 6.700E+05, 6.790E+05,
    7.500E+05, 8.200E+05, 8.611E+05, 8.750E+05, 9.000E+05,
    9.200E+05, 1.010E+06, 1.100E+06, 1.200E+06, 1.250E+06,
    1.317E+06, 1.356E+06, 1.400E+06, 1.500E+06, 1.850E+06,
    2.354E+06, 2.479E+06, 3.000E+06, 4.304E+06, 4.800E+06,
    6.434E+06, 8.187E+06, 1.000E+07, 1.284E+07, 1.384E+07,
    1.455E+07, 1.568E+07, 1.733E+07, 2.000E+07/"
OUTPREFIX="ndec-outputs"
MSGPREFIX="ndec-messages"
USAGE="Usage:

$CODE  FILE  [options]


POSITIONAL ARGUMENTS
--------------------

ENDF6                       input ENDF-6 file.

PENDF                       input PENDF file.


KEYWORD ARGUMENTS
-----------------

-h|--help                   Print the help text.

-m|--messages               Parse the output files for warnings and errors.
                            The messages are reported in a xml file.

--outputs                   Produce a xml file containing the outputs.

"


#######################################################################
#######################################################################
#                                                                     #
#                           FUNCTIONS                                 #
#                                                                     #
#######################################################################
#######################################################################
getMAT () {
#=== FUNCTION =========================================================
# NAME: get_mat
# DESCRIPTION: Find in the ENDF-6 file the MAT number.
#              Use the sequence number (between 67-80 columns) in the 
#              second line.
#              Use xargs to trim the leading blankspaces in case the
#              MAT is only 3 digits.
# PARAMETER 1: ENDF-6 filename
#======================================================================
sed -n '2,2 p' "$1" | cut -c67-70 | xargs
}

GetMessages () {
#=== FUNCTION =========================================================
# NAME: GetMessages
# DESCRIPTION: Extract warning/error messages from NJOY output and 
#              print them in xml format as:
#
#              <messages>
#               <warning module="%s" lines="%s"><![CDATA[ %s ]]></warning>
#               <error module="%s" lines="%s"><![CDATA[ %s ]]></error>
#              <messages>
#
# PARAMETER 1: NJOY output file
# PARAMETER 2: NJOY standard error (stderr) file
#======================================================================
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Parse standard error file and extract module.
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
MOD_PTRN="^\ [a-z]{4,5}[\.]{3}"
ERR_PTRN="EXIT STATUS"
echo "<messages>"
tac "$1" | while IFS= read -r line
do
   ((iline++))
   [[ "$line" =~ $ERR_PTRN ]] && ERRTXT="$line"
   if [[ "$line" =~ $MOD_PTRN && ! -z $ERRTXT ]]
   then
      MODULE=$(echo "$line" | cut -d. -f1 | xargs)
      printf "$ERR" "$MODULE" "" "$ERRTXT"
      break
   fi
done
echo "</messages>"
}



#######################################################################
#######################################################################
#                                                                     #
#                    PARSE COMMAND LINE ARGUMENTS                     #
#                                                                     #
#######################################################################
#######################################################################
POSITIONAL=()
while [[ $# -gt 0 ]]
do
key="$1"
case $key in
    -h|--help) # print USAGE and exit with status 0
    echo -e "$USAGE"
    exit 0
    ;;
    --prefix)
    PREFIX="$2"
    shift # past argument
    shift # past value
    ;;
    -m|--messages)
    MESSAGES=1
    shift # past argument
    ;;
    --outputs)
    OUTPUTS=1
    shift # past argument
    ;;
    *)    # unknown option
    POSITIONAL+=("$1") # save it in an array for later
    shift # past argument
    ;;
esac
done
#set -- "${POSITIONAL[@]}" # restore positional parameters



#######################################################################
#######################################################################
#                                                                     #
#                          PROCESS INPUTS                             #
#                                                                     #
#######################################################################
#######################################################################
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Get SEED (ENDF-6 file) from the list of positional arguments 
# in the command line.
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[[ ${#POSITIONAL[@]} -eq 0 ]] && {>&2 echo -e "ERROR: missing positional argument \"ENDF6\"."; exit 1;}
ENDF6="$(realpath ${POSITIONAL[0]})"
[[ -s "$ENDF6" ]] || {>&2 echo -e "ERROR: incorrect ENDF-6 file '$ENDF6'."; exit 1;}
[[ ${#POSITIONAL[@]} -eq 1 ]] && {>&2 echo -e "ERROR: missing positional argument \"PENDF\"."; exit 1;}
PENDF="$(realpath ${POSITIONAL[0]})"
[[ -s "$PENDF" ]] || {>&2 echo -e "ERROR: incorrect PENDF file '$PENDF'."; exit 1;}
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Extract the MAT number and set the prefix.
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
MAT=$(getMAT "$ENDF6")
[[ -z $PREFIX ]] && PREFIX=$MAT
echo $PREFIX



#######################################################################
#######################################################################
#                                                                     #
#                PRODUCE HENDF FILE USING PREPRO                      #
#                                                                     #
#######################################################################
#######################################################################
(
{
printf "MERGER.ENDF\n"
printf "Extraction of MF1-2,4-99 from ENDF-6 file                            0  0\n"
printf "$(basename $ENDF6)\n"
printf "END\n"
printf "%-6d%-2d%-3d%-6d%-2d%-3d %s\n" $MAT 0 0 $MAT 2 999
printf "%-6d%-2d%-3d%-6d%-2d%-3d %s\n" $MAT 4 0 $MAT 99 999
} > MERGER.INP
$SCRIPTDIR/PREPRO_2017/merger 2>&1 |tee -a "${PREFIX}.stderr"
{
printf "MERGER.PENDF\n"
printf "Extraction of only MF3 from ENDF-6 file                              0  0\n"
printf "$(basename $PENDF)\n"
printf "END\n"
printf "%-6d%-2d%-3d%-6d%-2d%-3d %s\n" $MAT 3 0 $MAT 3 999
} > MERGER.INP
$SCRIPTDIR/PREPRO_2017/merger 2>&1 |tee -a "${PREFIX}.stderr"
{
printf "MERGER.OUT\n"
printf "HENDF file prepared from NJOY MF3 and rest taken from ENDF file      0  0\n"
printf "MERGER.ENDF\n"
printf "MERGER.PENDF\n"
printf "END\n"
printf "%-6d%-2d%-3d%-6d%-2d%-3d %s\n" $MAT 0 0 $MAT 99 999
} > MERGER.INP
$SCRIPTDIR/PREPRO_2017/merger 2>&1 |tee -a "${PREFIX}.stderr"
{
printf "MERGER.OUT\n"
printf "${PREFIX}.HENDF\n"
} > DICTIN.INP
$SCRIPTDIR/PREPRO_2017/dictin 2>&1 |tee -a "${PREFIX}.stderr"
rm -f DICTIN.INP DICTIN.LST MERGER.INP MERGER.OUT MERGER.PENDF MERGER.ENDF MERGER.LST
)
EXIT_STATUS=$?
FAIL_MSG="PREPRO FAILED TO RUN WITH EXIT STATUS $EXIT_STATUS"
[[ $EXIT_STATUS -ne "0" ]] && { >&2 echo "$FAIL_MSG"; echo "$FAIL_MSG" >> "${PREFIX}.stderr"; }



#######################################################################
#######################################################################
#                                                                     #
#                    PROCESS OUTPUT FILES                             #
#                                                                     #
#######################################################################
#######################################################################
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Rename outputs and write list of produced output files (use xml format).
# Use agreed elements and attributes defined in the NDEC documentation.
# Defined standard filename is "PREFIX-outputs.xml"
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[[ -z $OUTPUTS ]] || {
{
echo "<outputs>"
[[ -s "${PREFIX}.HENDF" ]] && { echo "<file id=\"hendf\" format=\"ENDF\">${PREFIX}.HENDF</file>" ;}
echo "</outputs>"
} > "${PREFIX}-outputs.xml"
}



#######################################################################
#######################################################################
#                                                                     #
#                          ERROR MESSAGES                             #
#                                                                     #
#######################################################################
#######################################################################
[[ -z $MESSAGES ]] || GetMessages "${PREFIX}.stderr" > "${PREFIX}-messages.xml"



#######################################################################
#######################################################################
#                                                                     #
#                          EXIT WITH FAILURE                          #
#                                                                     #
#######################################################################
#######################################################################
[[ $EXIT_STATUS -ne "0" ]] && exit $EXIT_STATUS
